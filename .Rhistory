View(linreg_pred)
View(linreg_pred)
linreg_pred <- data.frame("Predicted" = pred1*10000, "Actual" = model_lin_valid$lSalePrice*10000, "Residual" = residuals*10000)
pred1 <- predict(linreg,model_lin_valid,type = "response")
linreg <- lm(lSalePrice~.-SalePrice, data = model_lin_train)
model_lin_train = model_lin[train.index,]
library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
library(gplots)
library(repr)
library(dplyr)
library(tidyverse)
con <- dbConnect(odbc::odbc(),
Driver = "SQL Server",
Server = "LOGISTICS\\SQLEXPRESS",
Database = "HomePrediction",
Port = 1433)
library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
library(gplots)
library(repr)
library(dplyr)
library(tidyverse)
con <- dbConnect(odbc::odbc(),
Driver = "SQL Server",
Server = "LOGISTICS\\SQLEXPRESS",
Database = "HomePrediction",
Port = 1433)
library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
library(gplots)
library(repr)
library(dplyr)
library(tidyverse)
con <- dbConnect(odbc::odbc(),
Driver = "SQL Server",
Server = "LOGISTICS\\SQLEXPRESS",
Database = "HomePrediction",
Port = 1433)
con <- dbConnect(odbc::odbc(),
Driver = "SQL Server",
Server = "LOGISTICS\\SQLEXPRESS",
Database = "HomePrediction",
Port = 1433)
library(odbc)
library(dplyr)
library(corrplot)
library(leaps)
con <- dbConnect(odbc::odbc(),
Driver = "SQL Server",
Server = "LOGISTICS\\SQLEXPRESS",
Database = "HomePrediction",
Port = 1433)
